# $Id$
#
# This source file is a part of the Fresco Project.
# Copyright (C) 1999, 2000 Stefan Seefeld <stefan@fresco.org> 
# http://www.fresco.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
# MA 02139, USA.

SHELL		:= /bin/sh

top_srcdir	:= @top_srcdir@
top_builddir	:= @top_builddir@
srcdir		:= @srcdir@
cdir		:= $(top_builddir)/config
hdir		:= $(top_srcdir)/include/Babylon
docdir		:= $(top_builddir)/share/doc/Babylon

include $(cdir)/local.mk

CXXFLAGS	+= $(SO_CXXFLAGS)
LDFLAGS		+= $(SO_LDFLAGS)
CPPFLAGS        += -DRC_MODULEPATH='"$(libdir)/Babylon"'

SRC		:= Dictionary.cc Char.cc exceptions.cc traits.cc String.cc \
		   Boundaries.cc
HDR		:= $(patsubst $(hdir)/%, %, $(wildcard $(hdir)/*.hh)) \
		   $(patsubst $(hdir)/%, %, $(wildcard $(hdir)/internal/*.hh))
DEP		:= $(patsubst %.cc, %.d, $(SRC))
OBJ		:= $(patsubst %.cc, %.o, $(SRC))
HSYN		:= $(patsubst %, %.syn, $(HDR))
SSYN		:= $(patsubst %, %.syn, $(SRC))
SYN		:= $(HSYN) $(SSYN)
XREF		:= $(patsubst %, %.xref, $(HDR))
XREF		+= $(patsubst %, %.xref, $(SRC))

TARGET		:= $(top_builddir)/lib/libBabylon.so
MANUAL		:= $(docdir)/html

vpath %.hh  $(hdir)
vpath %.cc  $(srcdir)

.FORCE:

.PHONY: depend doc install install-doc uninstall clean distclean maintainer-clean dist

all:	$(TARGET)

$(TARGET):	$(OBJ)
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $(OBJ) $(LIBS)

depend: $(DEP)

xref:	$(docdir)/sxr/Babylon.xref $(docdir)/sxr/Babylon.syn

doc:	$(MANUAL)

$(docdir)/sxr/Babylon.xref:	$(XREF)
	@echo linking xref files together
	mkdir -p $(docdir)/sxr
	compile-xref -o $@ $^

$(docdir)/sxr/Babylon.syn:	$(SSYN) $(HSYN)
	@echo linking synopsis files together
	mkdir -p $(docdir)/sxr
	$(SYNOPSIS) -o $@ $^

$(MANUAL):	$(HSYN)
	@echo formatting $(@F)
	$(SYNOPSIS) -c ../config/synopsis.py -Wc,formatter=HTML -o $@ $(HSYN)
	touch $@

install:	all
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(libdir)
	$(SHTOOL) install -C -m 755 $(TARGET) $(DESTDIR)$(libdir)
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(includedir)/Babylon
	for header in $(HDR); do \
	    $(SHTOOL) install -C -m 644 $(hdir)/$$header $(DESTDIR)$(includedir)/Babylon; \
	done
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(bindir)
	$(SHTOOL) install -C -m 755 ../config/Babylon-config $(DESTDIR)$(bindir)

install-doc: doc
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(datadir)/doc/Prague
	cp -r ../share/doc/Babylon/html $(DESTDIR)$(datadir)/doc/Babylon

uninstall:
	rm -fr $(DESTDIR)$(datadir)/Babylon/doc
	rm -f $(DESTDIR)$(bindir)/Babylon-config
	rm -rf $(DESTDIR)$(includedir)/Babylon
	rm -f $(DESTDIR)$(libdir)/libBabylon.so

build-tests: all

run-tests: build-tests

clean:	
	rm -f $(TARGET)
	rm -f *.o *.d *.syn

distclean:	clean
	rm -f Makefile ../include/Babylon/acconfig.hh \
		../bin/Babylon-config

maintainer-clean: distclean

%.d:	%.cc %.hh
	@echo generating dependencies for $(<F)
	$(SHELL) -ec '$(CXX) $(DEPFLAGS) $(CPPFLAGS) $< | sed "s/$*\\.o[ :]*/$*\\.d $*\\.o : /g" > $@'

%.o:	%.cc
	@echo compiling $(@F)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

%.hh.syn %.hh.xref:	%.hh
	@echo parsing $(^F)
	$(SYNOPSIS) -c ../config/synopsis.py -Wc,parser=Fresco,linker=Fresco $(patsubst -I%, -I%, $(CPPFLAGS)) -Wp,-x,$*.hh.xref -o $*.hh.syn $?

%.cc.syn %.cc.xref:	%.cc
	@echo parsing $(^F)
	$(SYNOPSIS) -c ../config/synopsis.py -Wc,parser=Fresco,linker=Fresco $(patsubst -I%, -I%, $(CPPFLAGS)) -Wp,-x,$*.cc.xref -o $*.cc.syn $?

ifneq (,$(findstring depend, $(MAKECMDGOALS)))
$(DEP): %.d:	.FORCE
endif

ifeq (,$(filter $(MAKECMDGOALS), depend doc install-doc clean distclean maintainer-clean))
-include $(DEP)
endif
