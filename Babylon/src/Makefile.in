# $Id$
#
# This source file is a part of the Fresco Project.
# Copyright (C) 1999, 2000 Stefan Seefeld <stefan@fresco.org> 
# http://www.fresco.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
# MA 02139, USA.

SHELL		:= /bin/sh

top_srcdir	:= @top_srcdir@
srcdir		:= @srcdir@
cdir		:= @top_builddir@/config
hdir		:= $(top_srcdir)/include/Babylon

include $(cdir)/local.mk

CXXFLAGS	+= $(SO_CXXFLAGS)
LDFLAGS		+= $(SO_LDFLAGS)
CPPFLAGS        += -DRC_MODULEPATH='"$(libdir)/Babylon"'

SRC		:= String.cc Char.cc Dictionary.cc utils.cc vis_iterator.cc
HDR		:= $(patsubst $(hdir)/%, %, $(wildcard $(hdir)/*.hh))
DEP		:= $(patsubst %.cc, %.d, $(SRC))
OBJ		:= $(patsubst %.cc, %.o, $(SRC))
SYN		:= $(patsubst %.hh, %.syn, $(HDR))

TARGET		:= ../lib/libBabylon.so

vpath %.hh  $(hdir)
vpath %.cc  $(srcdir)

.FORCE:

.PHONY: depend config doc install install-doc uninstall clean distclean maintainer-clean dist

all:	$(TARGET) ../bin/Babylon-config

$(TARGET):	$(OBJ)
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $(OBJ) $(LIBS)

../bin/Babylon-config: $(top_srcdir)/config/Babylon-config.in
	rm -f $@ $@.tmp
	$(EDIT) -e 's,@prefix\@,$(abs_top_builddir),g' \
		-e 's,@exec_prefix\@,$(abs_top_builddir),g' \
	  	-e 's,@CPPFLAGS\@,@CPPFLAGS@ -I$(abs_top_builddir)/include -I$(abs_top_srcdir)/include ,g' \
	  $< > $@.tmp
	chmod +x $@.tmp
	mv $@.tmp $@

config: ../bin/Babylon-config

depend: $(DEP)

doc:	../share/doc/Babylon/html ../bin/Babylon-config

../share/doc/Babylon/html:	$(SYN)
	@echo formatting $(@F)
	$(SYNOPSIS) -c ../config/synopsis.py -Wc,formatter=HTML -o $@ $(SYN)
	touch $@

install:	all
	$(INSTALL) -D -m 755 $(TARGET) $(DESTDIR)$(libdir)/$(notdir $(TARGET))
	@for header in $(HDR); do \
	  if ! cmp -s $(hdir)/$$header $(DESTDIR)$(includedir)/Babylon/$$header 2>/dev/null; then \
	    echo "$(INSTALL) -D -m 644 $(hdir)/$$header $(DESTDIR)$(includedir)/Babylon/$$header"; \
            $(INSTALL) -D -m 644 $(hdir)/$$header $(DESTDIR)$(includedir)/Babylon/$$header; \
	  else \
	    echo "$(DESTDIR)$(includedir)/Babylon/$$header is up to date"; \
          fi; \
	done
	$(INSTALL) -d -m 755 $(DESTDIR)$(bindir)
	rm -f $(DESTDIR)$(bindir)/Babylon-config $(DESTDIR)$(bindir)/Babylon-config.tmp
	$(EDIT) -e 's,@prefix\@,$(prefix),g' \
		-e 's,@exec_prefix\@,$(exec_prefix),g' \
	  	-e 's,@CPPFLAGS\@,@CPPFLAGS@ -I$(includedir),g' \
        $(top_srcdir)/config/Babylon-config.in > $(DESTDIR)$(bindir)/Babylon-config.tmp
	chmod +x $(DESTDIR)$(bindir)/Babylon-config.tmp
	mv $(DESTDIR)$(bindir)/Babylon-config.tmp $(DESTDIR)$(bindir)/Babylon-config

install-doc: doc
	mkdir -p $(DESTDIR)$(datadir)/doc/Babylon
	cp -r ../share/doc/Babylon/html $(DESTDIR)$(datadir)/doc/Babylon

uninstall:
	rm -fr $(DESTDIR)$(datadir)/Babylon/doc
	rm -f $(DESTDIR)$(bindir)/Babylon-config
	rm -rf $(DESTDIR)$(includedir)/Babylon
	rm -f $(DESTDIR)$(libdir)/libBabylon.so

clean:	
	rm -f $(TARGET)
	rm -f *.o *.d *.syn

distclean:	clean
	rm -f Makefile $(hdir)/Babylon/acconfig.hh \
		$(cdir)/config.log $(cdir)/config.status \
		../bin/Babylon-config

maintainer-clean: distclean
	rm -f $(top_srcdir)/configure $(top_srcdir)/config/acconfig.hh.in \
		$(top_srcdir)/config/aclocal.m4

%.d:	%.cc %.hh
	@echo generating dependencies for $(<F)
	$(SHELL) -ec '$(CXX) $(DEPFLAGS) $(CPPFLAGS) $< | sed "s/$*\\.o[ :]*/$*\\.d $*\\.o : /g" > $@'

%.o:	%.cc
	@echo compiling $(@F)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

%.syn:	%.hh
	@echo parsing $(^F)
	$(SYNOPSIS) -c ../config/synopsis.py $(patsubst -I%, -I%, $(CPPFLAGS)) -Wc,parser=Babylon,linker=Babylon $(SFLAGS) -o $@ $?

ifneq (,$(findstring config, $(MAKECMDGOALS)))
../bin/Babylon-config: .FORCE
endif

ifneq (,$(findstring depend, $(MAKECMDGOALS)))
$(DEP): %.d:	.FORCE
endif

ifeq (,$(filter $(MAKECMDGOALS), config depend doc install-doc clean distclean maintainer-clean))
-include $(DEP)
endif
