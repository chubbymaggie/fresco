# $Id$
#
# This source file is a part of the Fresco Project.
# Copyright (C) 1999, 2000 Stefan Seefeld <stefan@fresco.org> 
# http://www.fresco.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
# MA 02139, USA.

SHELL	:= /bin/sh

srcdir	:= @abs_srcdir@
builddir	:= @abs_builddir@

distdir	:= @PACKAGE_NAME@-@PACKAGE_VERSION@

mandatory	:= Prague Babylon Fresco Berlin 
optional	:= GGI SDL \
                   Clients-C++ Clients-Python Clients-Java Clients-Perl

ifeq ($(action), config)
mandatory_dirs	:= $(foreach package, $(mandatory), $(shell test -d $(srcdir)/$(package) && echo '$(package)'))
optional_dirs	:= $(foreach package, $(optional), $(shell test -d $(srcdir)/$(package) && echo '$(package)'))
else
mandatory_dirs	:= $(foreach package, $(mandatory), $(shell test -d $(package) && echo '$(package)'))
optional_dirs	:= $(foreach package, $(optional), $(shell test -d $(package) && echo '$(package)'))
endif

# Overridden by the clean-targets, allowing the same subdirs-rule to be used
# for everything.
action	:= all

.PHONY: all $(mandatory_dirs) $(optional_dirs)
.PHONY: config doc install install-doc depclean clean distclean maintainer-clean dist clean

ifeq ($(strip $(mandatory_dirs) $(optional_dirs)),)
all:
	@echo "please use 'make config' to prepare the build tree first"
else
all:	$(mandatory_dirs) $(optional_dirs)
endif

$(mandatory_dirs): %: %/Makefile
	@echo "making $(action) in $@"
	$(MAKE) -C $@ $(action)

$(optional_dirs): %: %/Makefile
	@echo "making $(action) in $@ (optional)"
	-$(MAKE) -C $@ $(action)

config:
	$(MAKE) action="config"

doc:	config
	$(MAKE) action="doc"

install:
	$(MAKE) action="install"

install-doc:	config
	$(MAKE) action="install-doc"

uninstall:
	$(MAKE) action="uninstall"

depclean:
	find -name '*.d' -exec rm -f '{}' ';'

clean:
	$(MAKE) action="clean"

dist:
	-rm -rf $(distdir)
	mkdir $(distdir)
	-chmod 777 $(distdir)
	cp -pr $(srcdir) $(distdir)
	-chmod -R a+r $(distdir)
	tar czhf $(distdir).tar.gz $(distdir)
	-rm -rf $(distdir)

distclean:
	@echo 'This command removes Makefiles and auxiliary files;'
	@echo 'run configure to regenerate them.'
	$(MAKE) action="distclean"
	rm -f Makefile config.cache config.log config.status

maintainer-clean:
	@echo 'This command is intended for maintainers to use;'
	@echo 'it deletes configure and auxiliary files;'
	@echo 'run autogen.sh to regenerated them.'
	$(MAKE) action="maintainer-clean"
	rm -f Makefile config.cache config.log config.status configure

%/Makefile: $(srcdir)/%/Makefile.in
	@echo configuring package $(@D) with $(configure_args)
	mkdir -p $(@D)
	-(cd $(@D); $(srcdir)/$(@D)/configure $(configure_args))

ifneq ($(findstring Prague, $(mandatory_dirs) $(optional_dirs)),)
Prague	:= --with-Prague-prefix=$(builddir)/Prague

Babylon/Makefile:	Prague/Makefile
Berlin/Makefile:	Prague/Makefile
Clients-C++/Makefile:	Prague/Makefile
endif
ifneq ($(findstring Babylon, $(mandatory_dirs) $(optional_dirs)),)
Babylon	:= --with-Babylon-prefix=$(builddir)/Babylon

Fresco/Makefile:		Babylon/Makefile
Berlin/Makefile:		Babylon/Makefile
Clients-C++/Makefile:	Babylon/Makefile
endif
ifneq ($(findstring Fresco, $(mandatory_dirs) $(optional_dirs)),)
Fresco	:= --with-Fresco-prefix=$(builddir)/Fresco

Berlin/Makefile:		Fresco/Makefile
Clients-C++/Makefile:	Fresco/Makefile
Clients-Python/Makefile:	Fresco/Makefile
Clients-Perl/Makefile:	Fresco/Makefile
endif
ifneq ($(findstring Berlin, $(mandatory_dirs) $(optional_dirs)),)
Berlin	:= --with-Berlin-prefix=$(builddir)/Berlin

GGI/Makefile:		Berlin/Makefile
SDL/Makefile:		Berlin/Makefile
Clients-C++:	Berlin #this has to go !
endif

Babylon/Makefile: override configure_args	+= $(Prague)
Fresco/Makefile: override configure_args	+= $(Prague) $(Babylon)
Berlin/Makefile: override configure_args	+= $(Prague) $(Babylon) $(Fresco)
GGI/Makefile: override configure_args		+= $(Prague) $(Fresco) $(Berlin)
SDL/Makefile: override configure_args		+= $(Prague) $(Fresco) $(Berlin)
Clients-C++/Makefile: override configure_args	+= $(Prague) $(Babylon) $(Fresco) $(Berlin)
Clients-Python/Makefile: override configure_args+= $(Fresco)

