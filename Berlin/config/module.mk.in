# $Id$
#
# This source file is a part of the Fresco Project.
# Copyright (C) 1999, 2000 Stefan Seefeld <stefan@fresco.org> 
# http://www.fresco.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
# MA 02139, USA.

# this file defines common rules to build Berlin plugins.
# It requires the following variables to be set within the
# including Makefile:
#
# builddir      the build tree root
#
# SRC:   	the list of all source files to be compiled and linked
#        	into the module
# TARGET:	the name of the module to be generated
#
# CPPFLAGS:	preprocessor flags
# CXXFLAGS:	compiler flags
# LDFLAGS:	linker flags
# LIBS:		libraries to be linked to the module
#
#

docdir	:= $(patsubst $(top_srcdir)/%,%, $(srcdir))

# Compilation and linking flags.
CXXFLAGS+= $(SO_CXXFLAGS)
LDFLAGS += $(SO_LDFLAGS)
LIBS	:= -L$(top_builddir)/lib -lBerlin $(EXTRA_LIBS)
CPPFLAGS+= $(EXTRA_CPPFLAGS)

.FORCE:

.PHONY: all install uninstall clean distclean maintainer-clean

DEP	:= $(patsubst %.cc, %.d, $(SRC))
OBJ	:= $(patsubst %.cc, %.o, $(SRC))
HDR	?= $(patsubst $(srcdir)/%, %, $(wildcard $(srcdir)/*.hh))
SYN	:= $(patsubst %.hh, %.syn, $(HDR))

TARGET	:= $(MODULE).so

vpath %.hh  $(srcdir)
vpath %.cc  $(srcdir)

all:	$(TARGET)

$(TARGET):	$(DEP) $(OBJ)
		@echo linking $(@F)
		$(CXX) $(LDFLAGS) $(SO_LDFLAGS) -o $@ $(OBJ) $(LIBS)

depend: $(DEP)

doc:	$(abs_top_builddir)/share/doc/Berlin/$(docdir)/html

$(abs_top_builddir)/share/doc/Berlin/$(docdir)/html:	$(SYN)
	@echo formatting $(@F)
	$(SYNOPSIS) -c $(cdir)/synopsis.py -Wc,formatter=KitHTML -o $@ $(SYN)
	touch $@

install:	all
		$(INSTALL) -d -m 755 $(DESTDIR)$(libdir)/Fresco/
		$(INSTALL) -m 755 $(TARGET) $(DESTDIR)$(libdir)/Fresco/

install-doc: doc
	mkdir -p $(DESTDIR)$(datadir)/doc/Berlin/$(docdir)
	cp -r $(abs_top_builddir)/share/doc/Berlin/$(docdir)/html $(DESTDIR)$(datadir)/doc/Berlin/$(docdir)

clean:	
		rm -f $(TARGET)
		rm -f *.o *.d

distclean:	clean
		rm -f Makefile

maintainer-clean: distclean

ifeq (,$(findstring depend, $(MAKECMDGOALS)))
%.d:	%.cc %.hh
else
%.d:	%.cc %.hh .FORCE
endif
	@echo generating dependencies for $(<F)
	$(SHELL) -ec '$(CXX) $(DEPFLAGS) -I$(top_builddir)/include $(CPPFLAGS) $< | sed "s/$*\\.o[ :]*/$*\\.d $*\\.o : /g" > $@'

%.o:	%.cc
	@echo compiling $(@F)
	$(CXX) -I$(top_builddir)/include $(CPPFLAGS) $(CXXFLAGS) $(SO_CXXFLAGS) -c $< -o $@

%.syn:	%.hh
	@echo parsing $(^F)
	$(SYNOPSIS) -c $(cdir)/synopsis.py -I$(top_builddir)/include $(patsubst -I%, -I%, $(CPPFLAGS)) -Wp,-b,$(srcdir) -Wc,parser=Berlin,linker=Berlin $(SFLAGS) -o $@ $?

ifeq (,$(filter $(MAKECMDGOALS), config depend clean distclean maintainer-clean))
-include $(DEP)
endif
