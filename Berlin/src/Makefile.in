# $Id$
#
# This source file is a part of the Fresco Project.
# Copyright (C) 1999, 2000 Stefan Seefeld <stefan@fresco.org> 
# http://www.fresco.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
# MA 02139, USA.

SHELL	:= /bin/sh

abs_top_srcdir	:= @abs_top_srcdir@
top_builddir	:= @top_builddir@
srcdir		:= @srcdir@
cdir		:= $(top_builddir)/config
hdir		:= $(abs_top_srcdir)/include/Berlin
docdir		:= $(top_builddir)/share/doc/Berlin

include $(cdir)/local.mk

CXXFLAGS+= $(SO_CXXFLAGS)
LDFLAGS	+= $(SO_LDFLAGS)
LIBS	+= -lpng

SRC	:= Console.cc Logger.cc DefaultPOA.cc ServantBase.cc \
	   IdentifiableImpl.cc RefCountBaseImpl.cc RegionImpl.cc \
	   TransformImpl.cc TraversalImpl.cc AllocationImpl.cc \
	   GraphicImpl.cc MonoGraphic.cc PolyGraphic.cc Allocator.cc \
	   Requestor.cc DebugGraphic.cc DrawTraversalImpl.cc \
	   PickTraversalImpl.cc ControllerImpl.cc DesktopImpl.cc \
	   ScreenImpl.cc ScreenManager.cc EventManager.cc PositionalFocus.cc \
	   NonPositionalFocus.cc FilterImpl.cc SubjectImpl.cc PNG.cc \
	   RasterImpl.cc KitImpl.cc RCManager.cc ServerContextImpl.cc \
	   ServerImpl.cc GraphDebugger.cc GraphicDictionary.cc

DEP	:= $(patsubst %.cc, %.d, $(SRC))
HDR	:= Console.hh Color.hh Event.hh GapBuffer.hh Geometry.hh \
	   ImplVar.hh Math.hh ObjectCache.hh Provider.hh Pool.hh QuadTree.hh \
	   RefCountVar.hh Vertex.hh LRUCache.hh Logger.hh ServantBase.hh \
	   IdentifiableImpl.hh RefCountBaseImpl.hh RegionImpl.hh \
	   TransformImpl.hh TraversalImpl.hh AllocationImpl.hh Provider.hh \
	   GraphicImpl.hh MonoGraphic.hh PolyGraphic.hh \
	   Allocator.hh Requestor.hh DebugGraphic.hh \
	   DrawTraversalImpl.hh PickTraversalImpl.hh CommandImpl.hh \
	   ControllerImpl.hh ViewImpl.hh DesktopImpl.hh ScreenImpl.hh \
	   ScreenManager.hh EventManager.hh PositionalFocus.hh \
	   NonPositionalFocus.hh FilterImpl.hh SubjectImpl.hh KitImpl.hh \
	   RCManager.hh DefaultPOA.hh ObserverImpl.hh config.hh \
           ServerContextImpl.hh ServerImpl.hh GraphDebugger.hh \
	   GraphicDictionary.hh

CHDR	:= DirectBuffer.hh Renderer.hh GLContext.hh SHMDrawableFactory.hh GGIDrawableFactory.hh
OBJ	:= $(patsubst %.cc, %.o, $(SRC))
HSYN	:= $(patsubst %, %.syn, $(HDR) $(CHDR))
SSYN	:= $(patsubst %, %.syn, $(SRC))
XREF	:= $(patsubst %, %.xref, $(HDR) $(CHDR))
XREF	+= $(patsubst %, %.xref, $(SRC))

LIBS	+= -lpng

TARGET	:= $(top_builddir)/lib/libBerlin.so
MANUAL	:= $(docdir)/html

vpath %.hh  $(hdir):$(hdir)/Console
vpath %.cc  $(srcdir)

.FORCE:

all:	$(TARGET)

$(TARGET):	$(OBJ)
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) $(SO_LDFLAGS) -o $@ $(OBJ) $(LIBS)

depend: $(DEP)

xref:	Berlin.xref Berlin.syn

doc:	$(MANUAL)

Berlin.xref:	$(XREF)
	@echo linking xref files together
	mkdir -p $(docdir)/sxr
	compile-xref -o $@ $^

Berlin.syn:	$(SSYN) $(HSYN)
	@echo linking synopsis files together
	mkdir -p $(docdir)/sxr
	$(SYNOPSIS) -o $@ $^

$(MANUAL):	$(HSYN)
	@echo formatting $(@F)
	$(SYNOPSIS) -c ../config/synopsis.py -Wc,formatter=HTML -o $@ $(HSYN)
	touch $@

install:	all
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(libdir)
	$(SHTOOL) install -C -m 755 $(TARGET) $(DESTDIR)$(libdir)
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(includedir)/Berlin
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(includedir)/Berlin/Console
	$(SHTOOL) install -C -m 644 ../include/Berlin/acconfig.hh $(DESTDIR)$(includedir)/Berlin
	for header in $(HDR) $(addprefix Console/, $(CHDR)); do \
	  $(SHTOOL) install -C -m 644 $(hdir)/$$header $(DESTDIR)$(includedir)/Berlin/$$header; \
	done
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(bindir)
	$(SHTOOL) install -C -m 755 ../config/Berlin-config $(DESTDIR)$(bindir)/Berlin-config

install-doc: doc
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(datadir)/doc/Berlin
	cp -r ../share/doc/Berlin/html $(DESTDIR)$(datadir)/doc/Berlin

uninstall:
	rm -f $(DESTDIR)$(libdir)/$(TARGET)
	rm -f $(DESTDIR)$(bindir)/Berlin-config

build-tests:

run-tests:

clean:	
	rm -f $(TARGET)
	rm -f $(OBJ) $(DEP) $(SYN) $(XREF)

distclean:	clean
	rm -f Makefile ../include/Berlin/acconfig.hh \
              ../bin/Berlin-config

maintainer-clean: distclean

%.d:	%.cc %.hh
	@echo generating dependencies for $(<F)
	$(SHELL) -ec '$(CXX) $(DEPFLAGS) $(CPPFLAGS) $< | sed "s/$*\\.o[ :]*/$*\\.d $*\\.o : /g" > $@'

%.o:	%.cc
	@echo compiling $(@F)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPTFLAGS) $(SOFLAGS) -c $< -o $@

%.hh.syn %.hh.xref:	%.hh
	@echo parsing $(^F)
	$(SYNOPSIS) -c ../config/synopsis.py -Wc,parser=Fresco,linker=Fresco $(patsubst -I%, -I%, $(CPPFLAGS)) -Wp,-x,$(<F).xref -o $*.hh.syn $?

%.cc.syn %.cc.xref:	%.cc
	@echo parsing $(^F)
	$(SYNOPSIS) -c ../config/synopsis.py -Wc,parser=Fresco,linker=Fresco $(patsubst -I%, -I%, $(CPPFLAGS)) -Wp,-x,$(<F).xref -o $*.cc.syn $?

ifneq (,$(findstring depend, $(MAKECMDGOALS)))
$(DEP): %.d:	.FORCE
endif

ifeq (,$(filter $(MAKECMDGOALS), depend doc clean distclean maintainer-clean))
-include $(DEP)
endif
