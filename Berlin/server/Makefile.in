# $Id$
#
# This source file is a part of the Fresco Project.
# Copyright (C) 1999, 2000 Stefan Seefeld <stefan@fresco.org> 
# http://www.fresco.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
# MA 02139, USA.

SHELL		:= /bin/sh

top_srcdir	:= @top_srcdir@
srcdir		:= $(top_srcdir)/server
cdir		:= ../config

include $(cdir)/local.mk

ifeq ($(JPROF),yes)
JPROF_SRC	:= bfd.cpp coff.cpp elf.cpp leaky.cpp strset.cpp intcnt.cpp
JPROF_OBJ	:= $(patsubst %.cpp, %.o, $(JPROF_SRC))
CPPFLAGS	+= -I$(top_srcdir)/contrib/jprof -DJPROF
endif

CPPFLAGS	+= -DRC_PREFIX='"$(prefix)"' -DRC_SYSCONFDIR='"$(sysconfdir)"'
ifdef VERSION
CPPFLAGS	+= -DVERSION='"$(VERSION)"'
endif
LIBS		+= -L../lib -L../../lib -lBerlin -lFresco -lBabylon -lPrague

TARGETS		:= ../bin/berlin ../bin/kits ../bin/devices

ifeq ($(JPROF),yes)
JPROFTARGETS	:= ../lib/libjprof.so ../bin/jprof
LIBS		+= -ljprof

all:	$(JPROFTARGETS) $(TARGETS)  ../etc/berlinrc
else
all:	$(TARGETS) ../etc/berlinrc
endif

config: #do nothing
depend: #do nothing
doc: #do nothing

ifeq ($(JPROF),yes)
../lib/libjprof.so:	libmalloc.o
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -shared -o $@ $^

../bin/jprof:	$(JPROF_OBJ)
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ -lbfd -liberty -ldl

%.o:	$(top_srcdir)/contrib/jprof/%.cpp
	@echo compiling $(@F)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPTFLAGS) $(SOFLAGS) -c $< -o $@

endif

../bin/berlin:	ServerImpl.o ServerContextImpl.o server.o
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS)

../bin/kits:	ServerImpl.o ServerContextImpl.o kits.o
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS)

../bin/devices:	devices.o
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS)

../etc/berlinrc: $(top_srcdir)/config/berlinrc.in
	$(EDIT) -e 's,@prefix\@,$(abs_top_builddir),g' \
	   $^ > $@
	chmod 644 $@

install:	all
	$(INSTALL) -d -m 755 $(DESTDIR)$(bindir)
	$(INSTALL) -m 755 $(TARGETS) $(DESTDIR)$(bindir)
	$(INSTALL) -d -m 755 $(DESTDIR)$(sysconfdir)
	$(INSTALL) -m 644 ../etc/berlinrc $(DESTDIR)$(sysconfdir)
	$(INSTALL) -d -m 755 $(DESTDIR)$(datadir)/Fresco
	$(INSTALL) -m 644 $(top_srcdir)/share/glyph.dat $(DESTDIR)$(datadir)/Fresco
	$(INSTALL) -d -m 755 $(DESTDIR)$(datadir)/Fresco/PNG $(DESTDIR)$(datadir)/Fresco
	@for image in $(patsubst $(top_srcdir)/share/PNG/%, %, $(wildcard $(top_srcdir)/share/PNG/*.png)); do \
	  if ! cmp -s $(top_srcdir)/share/PNG/$$image $(DESTDIR)$(datadir)/Fresco/PNG/$$image 2>/dev/null; then \
	    echo "$(INSTALL) -m 644 $(top_srcdir)/share/PNG/$$image $(DESTDIR)$(datadir)/Fresco/PNG/$$image"; \
	    $(INSTALL) -m 644 $(top_srcdir)/share/PNG/$$image $(DESTDIR)$(datadir)/Fresco/PNG/$$image; \
	  else \
	    echo "$(DESTDIR)$(datadir)/Fresco/PNG/$$image is up to date"; \
	  fi; \
	done
	$(EDIT) -e 's,@prefix\@,$(prefix),g' \
	  $(top_srcdir)/config/berlinrc.in > $(DESTDIR)/$(sysconfdir)/berlinrc
	chmod 644 $(DESTDIR)/$(sysconfdir)/berlinrc

install-doc: #do nothing

uninstall:
	for target in $TARGETS ; do \
	  rm -f $(DESTDIR)$(bindir)/$$target \
	done
	rm -f $(DESTDIR)$(sysconfdir)/berlinrc
clean:	
	rm -f $(TARGETS)
	rm -f *.o

distclean:	clean
	rm -f Makefile ../etc/berlinrc

maintainer-clean: distclean

%.o:	$(srcdir)/%.cc
	@echo compiling $(@F)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@

