Source: berlin
Section: misc
Priority: optional
Maintainer: Bastian Blank <waldi@debian.org>
Build-Depends: debhelper (>> 3.0.0), libart-dev, libfreetype6-dev, libggi2-dev, omniorb-dev (>> 1:3.0.0), zlib1g-dev, libpng-dev
Standards-Version: 3.5.2

Package: berlin-server
Architecture: any
Depends: libbabylon (= ${Source-Version}), libberlin (= ${Source-Version}), libwarsaw (= ${Source-Version}), libprague (= ${Source-Version}), berlin-kit-drawing-libart (= ${Source-Version}), berlin-kit-gadget (= ${Source-Version}), berlin-kit-ggi (= ${Source-Version}), berlin-kit-image (= ${Source-Version}), berlin-kit-primitive (= ${Source-Version}), berlin-kit-widget-motif (= ${Source-Version}), ${shlibs:Depends}, xfonts-scalable
Recommends: berlin-demos-c++
Replaces: berlin, berlin-kit-command, berlin-kit-desktop, berlin-kit-figure, berlin-kit-layout, berlin-kit-text, berlin-kit-tool
Conflicts: berlin, berlin-kit-command, berlin-kit-desktop, berlin-kit-figure, berlin-kit-layout, berlin-kit-text, berlin-kit-tool
Description: The Berlin display server
 Berlin is a windowing system derived from Fresco, a powerful structured
 graphics toolkit originally based on InterViews. Berlin extends Fresco
 to a full, network-transparent windowing system that is not based on X.
 It features a rich drawing interface with multiple backends, device
 independent vector based graphics, a Unicode-based text system and is
 3D-aware. It's CORBA-based architecture allow clients in any language
 with corba bindings.

Package: berlin-demos-c++
Architecture: any
Depends: libbabylon (= ${Source-Version}), libberlin (= ${Source-Version}), libwarsaw (= ${Source-Version}), libprague (= ${Source-Version}), ${shlibs:Depends}
Recommends: berlin-server
Replaces: berlin-clients
Conflicts: berlin-clients
Description: Demo clients for the Berlin display server
 Simple demo applications for the Berlin display server written in C++.

Package: libbabylon
Section: libs
Architecture: any
Depends: libprague (= ${Source-Version}), ${shlibs:Depends}
Description: Unicode handling library for the Berlin display server
 This library contains the Unicode-string and Unicode char classes used
 in Berlin's C++ code. It allows to query all properties of Unicode
 characters and has some very rudimentary bidir-support.

Package: libbabylon-dev
Section: devel
Architecture: all
Depends: libbabylon (= ${Source-Version})
Description: Unicode handling library for the Berlin display server (development files)
 This library contains the Unicode-string and Unicode char classes used
 in Berlin's C++ code. It allows to query all properties of Unicode
 characters and has some very rudimentary bidir-support.

Package: libberlin
Section: libs
Architecture: any
Depends: libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Description: Core library for the Berlin display server
 This is the serverside implementation of Berlin's CORBA interfaces.

Package: libberlin-dev
Section: devel
Architecture: all
Depends: libberlin (= ${Source-Version})
Description: Core library for the Berlin display server (development files)
 This is the serverside implementation of Berlin's CORBA interfaces.

Package: libprague
Section: libs
Architecture: any
Depends: ${shlibs:Depends}
Description: OS wrapper library for the Berlin display server
 This OffiX-based library is used to encapsulate OS-specifics like
 threading, IPC and so on.

Package: libprague-dev
Section: devel
Architecture: all
Depends: libprague (= ${Source-Version})
Description: OS wrapper library for the Berlin display server (development files)
 This OffiX-based library is used to encapsulate OS-specifics like
 threading, IPC and so on.

Package: libwarsaw
Section: libs
Architecture: any
Depends: ${shlibs:Depends}
Description: Communication library for the Berlin display server
 This is the clientside implementation of Berlin's CORBA interfaces in C++.

Package: libwarsaw-dev
Section: devel
Architecture: all
Depends: libwarsaw (= ${Source-Version}), libberlin-dev (= ${Source-Version})
Description: Communication library for the Berlin display server (development files)
 This is the clientside implementation of Berlin's CORBA interfaces in C++.

Package: warsaw-idl
Section: devel
Architecture: all
Depends: omniorb
Description: Communication library for the Berlin display server (CORBA IDL)
 These IDL-files define the Berlin display server's interfaces. They are
 its equivalent to the X-protocol.

Package: berlin-kit-drawing-libart
Section: libs
Architecture: any
Depends: berlin-server (= ${Source-Version}), libberlin (= ${Source-Version}), libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Description: libart based DrawingKit for the Berlin display server
 DrawingKits are highlevel graphic drivers for the Berlin display server.
 They turn the vector-based graphics stored in the server into a format
 some support-library can work on. As all Kits it gets loaded into the
 server at runtime.
 .
 This DrawingKit uses libart to generate a pixel-based output that can
 get rendered with GGI.
 .
 You need one DrawingKit that works with your hardware to run the
 Berlin display server.

Package: berlin-kit-drawing-postscript
Section: libs
Architecture: any
Depends: berlin-server (= ${Source-Version}), libberlin (= ${Source-Version}), libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Suggests: gs, gv
Description: Postscript DrawingKit for the Berlin display server
 DrawingKits are highlevel graphic drivers for the Berlin display server.
 They turn the vector-based graphics stored in the server into a format
 some support-library can work on. As all Kits it gets loaded into the
 server at runtime.
 .
 This DrawingKit produces Postscript output and is used to print any
 graphic.
 .
 You need this DrawingKit to print to postscript printers (or other
 postscript interpreters like ghostscript).

Package: berlin-kit-gadget
Section: libs
Architecture: any
Depends: berlin-server (= ${Source-Version}), libberlin (= ${Source-Version}), libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Description: GadgetKit for the Berlin display server
 The GadgetKit contains simple graphics to manipulate others. Examples
 are rotators, zoomer and such. As all Kits it gets loaded into the
 server at runtime.
 .
 This Kit is used in one of the C++-demos.

Package: berlin-kit-ggi
Section: libs
Architecture: any
Depends: berlin-server (= ${Source-Version}), libberlin (= ${Source-Version}), libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Description: GGIKit for the Berlin display server
 This Kit allows to access the underlying GGI-library. As all Kits it
 gets loaded into the server at runtime.
 .
 This Kit is used in some of the C++-demos.

Package: berlin-kit-image
Section: libs
Architecture: any
Depends: berlin-server (= ${Source-Version}), libberlin (= ${Source-Version}), libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Description: ImageKit for the Berlin display server
 The ImageKit allows to display and manipulate rasterimages. As all
 Kits it gets loaded into the server at runtime.
 .
 Most Berlin clients will need this Kit.

Package: berlin-kit-primitive
Section: libs
Architecture: any
Depends: berlin-server (= ${Source-Version}), libberlin (= ${Source-Version}), libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Description: PrimitiveKit for the Berlin display server
 This Kit is the 3D equivalent of the FigureKit: It allows for the
 creation of simple 3D objects like cubes, spheres and others. This
 needs a 3D-DrawingKit to work. As all Kits it gets loaded into the
 server at runtime.
 .
 All Berlin clients that need 3D objects need this Kit to function
 properly.

Package: berlin-kit-unidraw
Section: libs
Architecture: any
Depends: berlin-server (= ${Source-Version}), libberlin (= ${Source-Version}), libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Description: UnidrawKit for the Berlin display server
 This Kit contains a framework for writting vectorbased graphic programs.
 As all Kits it gets loaded into the server at runtime.
 .
 This Kit is very much work in progress and not used right now.

Package: berlin-kit-widget-motif
Section: libs
Architecture: any
Depends: berlin-server (= ${Source-Version}), libberlin (= ${Source-Version}), libprague (= ${Source-Version}), libwarsaw (= ${Source-Version}), ${shlibs:Depends}
Description: Motif style WidgetKit for the Berlin display server
 A WidgetKit is used to create widgets like buttons, scrollbars and others.
 The look and feel of those widgets is configurable by exchanging the
 WidgetKit As all Kits it gets loaded into the server at runtime.
 .
 This particular implementation uses a Motif-like Look and Feel: That's
 very easy to implement:-)
 .
 All berlin clients depend on the existance of this Kit.

