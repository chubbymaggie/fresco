#!/usr/bin/make -f

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This is the debhelper compatability version to use.
export DH_COMPAT=3

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

CC = gcc-3.2
CXX = g++-3.2

CFLAGS = -O2
CPPFLAGS = -Wno-deprecated

ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -ggdb
endif
ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

CXXFLAGS=$(CFLAGS)
export CC CXX CFLAGS CPPFLAGS CXXFLAGS

build/config.status: configure
	dh_testdir

	-mkdir build
	cd build && ../configure \
		--host=$(DEB_HOST_GNU_TYPE) \
		--build=$(DEB_BUILD_GNU_TYPE) \
		--prefix=/usr \
		--mandir=\$${prefix}/share/man \
		--infodir=\$${prefix}/share/info \
		--sysconfdir=/etc \
		--enable-tracer

build-arch: build/config.status build-arch-stamp
build-arch-stamp:
	dh_testdir

	$(MAKE) -C build

	touch build-arch-stamp

build-indep: build/config.status build-indep-stamp
build-indep-stamp:
	dh_testdir

	#$(MAKE) -C build doc

	touch build-indep-stamp

build: build-arch build-indep

clean:
	dh_testdir
	dh_testroot
	rm -f build-arch-stamp build-indep-stamp 

	rm -rf build

	-test -r /usr/share/misc/config.sub && \
	  cp -f /usr/share/misc/config.sub config.sub
	-test -r /usr/share/misc/config.guess && \
	  cp -f /usr/share/misc/config.guess config.guess

	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	cd build/Babylon && make install DESTDIR=$(CURDIR)/debian/libbabylon-dev

	install $(CURDIR)/debian/libbabylon-dev/usr/lib/Babylon/* \
		$(CURDIR)/debian/libbabylon/usr/lib/Babylon
	rm -r $(CURDIR)/debian/libbabylon-dev/usr/lib/Babylon
	install $(CURDIR)/debian/libbabylon-dev/usr/lib/* \
		$(CURDIR)/debian/libbabylon/usr/lib
	rm -r $(CURDIR)/debian/libbabylon-dev/usr/lib
	install -m644 $(CURDIR)/debian/Babylon-config.1 \
		$(CURDIR)/debian/libbabylon-dev/usr/share/man/man1/

	cd build/Berlin && make install DESTDIR=$(CURDIR)/debian/libberlin-dev

	install $(CURDIR)/debian/libberlin-dev/usr/bin/devices \
		$(CURDIR)/debian/berlin/usr/bin/berlin-devices
	install $(CURDIR)/debian/libberlin-dev/usr/bin/kits \
		$(CURDIR)/debian/berlin/usr/bin/berlin-kits
	install $(CURDIR)/debian/libberlin-dev/usr/bin/berlin \
		$(CURDIR)/debian/berlin/usr/bin/
	rm -r $(CURDIR)/debian/libberlin-dev/usr/bin
	mv $(CURDIR)/debian/libberlin-dev/etc \
		$(CURDIR)/debian/berlin/
	mv $(CURDIR)/debian/libberlin-dev/usr/share/Fresco/ \
		$(CURDIR)/debian/berlin/usr/share/

	install $(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/GLDrawingKit.so \
		$(CURDIR)/debian/berlin-kit-drawing-opengl/usr/lib/Fresco
	install $(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/GadgetKit.so \
		$(CURDIR)/debian/berlin-kit-gadget/usr/lib/Fresco
	install $(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/PrimitiveKit.so \
		$(CURDIR)/debian/berlin-kit-primitive/usr/lib/Fresco
	install $(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/UnidrawKit.so \
		$(CURDIR)/debian/berlin-kit-unidraw/usr/lib/Fresco
	install $(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/UnidrawKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/ToolKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/TextKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/LayoutKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/FigureKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/DesktopKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/CommandKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/LibArtDrawingKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/PSDrawingKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/ImageKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/PrimitiveKit.so \
		$(CURDIR)/debian/libberlin-dev/usr/lib/Fresco/MotifKit.so \
		$(CURDIR)/debian/berlin/usr/lib/Fresco
	rm -r $(CURDIR)/debian/libberlin-dev/usr/lib/Fresco

	install $(CURDIR)/debian/libberlin-dev/usr/lib/* \
		$(CURDIR)/debian/libberlin/usr/lib
	rm -r $(CURDIR)/debian/libberlin-dev/usr/lib

	install -m644 $(CURDIR)/debian/berlin.1 \
		$(CURDIR)/debian/berlin/usr/share/man/man1/
	install -m644 $(CURDIR)/debian/Berlin-config.1 \
		$(CURDIR)/debian/libberlin-dev/usr/share/man/man1/

	cd build/Fresco-C++ && make install DESTDIR=$(CURDIR)/debian/libfresco-dev

	install $(CURDIR)/debian/libfresco-dev/usr/lib/* \
		$(CURDIR)/debian/libfresco/usr/lib
	rm -r $(CURDIR)/debian/libfresco-dev/usr/lib
	install -m644 $(CURDIR)/debian/Fresco-config.1 \
		$(CURDIR)/debian/libfresco-dev/usr/share/man/man1/

	install -m755 $(CURDIR)/build/Fresco-C++-demos/bin/demo \
		$(CURDIR)/debian/fresco-demos-c++/usr/bin/fresco-demo
	install -m755 $(CURDIR)/build/Fresco-C++-demos/bin/demo3D \
		$(CURDIR)/debian/fresco-demos-c++/usr/bin/fresco-demo3D
	install -m755 $(CURDIR)/build/Fresco-C++-demos/bin/pinyin_demo \
		$(CURDIR)/debian/fresco-demos-c++/usr/bin/fresco-pinyin_demo

	cd build/Fresco-IDL && make install DESTDIR=$(CURDIR)/debian/fresco-idl

	cd build/GGI && make install DESTDIR=$(CURDIR)/debian/berlin-kit-ggi

	rm -r $(CURDIR)/debian/berlin-kit-ggi/usr/bin
	install $(CURDIR)/debian/berlin-kit-ggi/usr/include/Fresco/* \
		$(CURDIR)/debian/libfresco-dev/usr/include/Fresco/
	rm -r $(CURDIR)/debian/berlin-kit-ggi/usr/include/Fresco

	cd build/Prague && make install DESTDIR=$(CURDIR)/debian/libprague-dev

	install $(CURDIR)/debian/libprague-dev/usr/lib/* \
		$(CURDIR)/debian/libprague/usr/lib
	rm -r $(CURDIR)/debian/libprague-dev/usr/lib
	install -m644 $(CURDIR)/debian/Prague-config.1 \
		$(CURDIR)/debian/libprague-dev/usr/share/man/man1/

	cd build/SDL && make install DESTDIR=$(CURDIR)/debian/berlin-kit-sdl

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_install -i
#	dh_installdebconf -i
	dh_installdocs -i
#	dh_installexamples -i
#	dh_installmenu -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installman -i
#	dh_installinfo -i
#	dh_undocumented -i
	dh_installchangelogs  -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
#	dh_perl -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	dh_install
#	dh_installdebconf -a
	dh_installdocs -a
#	dh_installexamples -a
#	dh_installmenu -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installpam -a
#	dh_installmime -a
#	dh_installinit -a
#	dh_installcron -a
#	dh_installman -a
#	dh_installinfo -a
#	dh_undocumented -a
	dh_installchangelogs  -a
	dh_strip -a
	dh_link -a
	dh_compress -a
	dh_fixperms -a
#	dh_makeshlibs -a
	dh_installdeb -a
#	dh_perl -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
#!/usr/bin/make -f

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

# This is the debhelper compatability version to use.
export DH_COMPAT=3

CFLAGS = -O2
CXXFLAGS = -O2
ifneq (,$(findstring debug,$(DEB_BUILD_OPTIONS)))
CFLAGS += -g
CXXFLAGS += -g
endif
export CFLAGS CXXFLAGS

configure: configure-stamp
configure-stamp:
	dh_testdir
	-mkdir build
	( \
		cd build ; \
		../configure \
			--prefix=/usr \
			--disable-py-clients \
			--disable-docs \
	)

	touch configure-stamp

build: configure-stamp build-stamp
build-stamp:
	dh_testdir
	( cd build ; $(MAKE) )

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp configure-stamp
	rm -rf build
	dh_clean

install: DH_OPTIONS=
install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

	install -m755 $(CURDIR)/debian/Berlin \
		$(CURDIR)/debian/berlin-server/usr/bin/
	install -m755 $(CURDIR)/build/bin/devices $(CURDIR)/build/bin/kits \
		$(CURDIR)/build/bin/server \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/bin/
	install -m644 $(CURDIR)/debian/berlinrc \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/etc/
	install -m644 $(CURDIR)/etc/glyph.dat $(CURDIR)/etc/pinyin.db \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/etc/
	install -m644 $(CURDIR)/etc/PNG/*.png \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/etc/PNG/
	ln -s ../../../X11R6/lib/X11/fonts/Type1/c0648bt_.pfb \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/fonts/
	install -m644 $(CURDIR)/debian/Berlin.1 \
		$(CURDIR)/debian/berlin-server/usr/share/man/man1/

	install -m755 $(CURDIR)/debian/Berlin-demo \
		$(CURDIR)/debian/berlin-demos-c++/usr/bin/
	install -m755 $(CURDIR)/build/bin/demo $(CURDIR)/build/bin/canvas \
		$(CURDIR)/build/bin/ggiwrapper $(CURDIR)/build/bin/pinyin_demo \
		$(CURDIR)/debian/berlin-demos-c++/usr/lib/Berlin/bin/
	install -m644 $(CURDIR)/debian/Berlin-demo.1 \
		$(CURDIR)/debian/berlin-demos-c++/usr/share/man/man1/

	install -m644 $(CURDIR)/build/lib/libBabylon.so \
		$(CURDIR)/debian/libbabylon/usr/lib/
	install -m644 $(CURDIR)/build/modules/Babylon/* \
		$(CURDIR)/debian/libbabylon/usr/lib/Berlin/modules/Babylon/
	install -m644 $(CURDIR)/build/lib/libBerlin.so \
		$(CURDIR)/debian/libberlin/usr/lib/
	install -m644 $(CURDIR)/build/lib/libPrague.so \
		$(CURDIR)/debian/libprague/usr/lib/
	install -m644 $(CURDIR)/build/lib/libWarsaw.so \
		$(CURDIR)/debian/libwarsaw/usr/lib/

	install -m644 $(CURDIR)/build/modules/libCommand.so \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libDesktop.so \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libArtDrawing.so \
		$(CURDIR)/debian/berlin-kit-drawing-libart/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libPSDrawing.so \
		$(CURDIR)/debian/berlin-kit-drawing-postscript/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libFigure.so \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libGGI.so \
		$(CURDIR)/debian/berlin-kit-ggi/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libGadget.so \
		$(CURDIR)/debian/berlin-kit-gadget/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libImage.so \
		$(CURDIR)/debian/berlin-kit-image/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libLayout.so \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libPrimitive.so \
		$(CURDIR)/debian/berlin-kit-primitive/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libText.so \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libTool.so \
		$(CURDIR)/debian/berlin-server/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libUnidraw.so \
		$(CURDIR)/debian/berlin-kit-unidraw/usr/lib/Berlin/modules/
	install -m644 $(CURDIR)/build/modules/libMotif.so \
		$(CURDIR)/debian/berlin-kit-widget-motif/usr/lib/Berlin/modules/

	install -m755 $(CURDIR)/build/bin/Babylon-config \
		$(CURDIR)/debian/libbabylon-dev/usr/bin/
	install -m644 $(CURDIR)/debian/Babylon-config.1 \
		$(CURDIR)/debian/libbabylon-dev/usr/share/man/man1/
	install -m644 $(CURDIR)/include/Babylon/*.hh \
		$(CURDIR)/debian/libbabylon-dev/usr/include/Babylon/

	install -m755 $(CURDIR)/build/bin/Berlin-config \
		$(CURDIR)/debian/libberlin-dev/usr/bin/
	install -m644 $(CURDIR)/debian/Berlin-config.1 \
		$(CURDIR)/debian/libberlin-dev/usr/share/man/man1/
	install -m644 $(CURDIR)/include/Berlin/*.hh \
		$(CURDIR)/debian/libberlin-dev/usr/include/Berlin/

	install -m755 $(CURDIR)/build/bin/Prague-config \
		$(CURDIR)/debian/libprague-dev/usr/bin/
	install -m644 $(CURDIR)/debian/Prague-config.1 \
		$(CURDIR)/debian/libprague-dev/usr/share/man/man1/
	install -m644 $(CURDIR)/include/Prague/Filter/*.hh \
		$(CURDIR)/debian/libprague-dev/usr/include/Prague/Filter/
	install -m644 $(CURDIR)/include/Prague/IPC/*.hh \
		$(CURDIR)/debian/libprague-dev/usr/include/Prague/IPC/
	install -m644 $(CURDIR)/include/Prague/Network/*.hh \
		$(CURDIR)/debian/libprague-dev/usr/include/Prague/Network/
	install -m644 $(CURDIR)/include/Prague/SAX/*.hh \
		$(CURDIR)/debian/libprague-dev/usr/include/Prague/SAX/
	install -m644 $(CURDIR)/include/Prague/Sys/*.hh \
		$(CURDIR)/debian/libprague-dev/usr/include/Prague/Sys/

	install -m755 $(CURDIR)/build/bin/Warsaw-config \
		$(CURDIR)/debian/libwarsaw-dev/usr/bin/
	install -m644 $(CURDIR)/debian/Warsaw-config.1 \
		$(CURDIR)/debian/libwarsaw-dev/usr/share/man/man1/
	install -m644 $(CURDIR)/include/Warsaw/*.hh \
		$(CURDIR)/debian/libwarsaw-dev/usr/include/Warsaw/

	install -m644 $(CURDIR)/idl/Warsaw/*.idl \
		$(CURDIR)/debian/warsaw-idl/usr/share/idl/Warsaw/

# Build architecture-independent files here.
# Pass -i to all debhelper commands in this target to reduce clutter.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
#	dh_installdebconf -i
	dh_installdocs -i
#	dh_installexamples -i
#	dh_installmenu -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installman -i
#	dh_installinfo -i
#	dh_undocumented -i
	dh_installchangelogs  -i
	dh_link -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
#	dh_perl -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
#	dh_installdebconf -a
	dh_installdocs -a
#	dh_installexamples -a
#	dh_installmenu -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installpam -a
#	dh_installmime -a
#	dh_installinit -a
#	dh_installcron -a
#	dh_installman -a
#	dh_installinfo -a
#	dh_undocumented -a
	dh_installchangelogs  -a
	dh_strip -a
	dh_link -a
	dh_compress -a
	dh_fixperms -a
#	dh_makeshlibs -a
	dh_installdeb -a
#	dh_perl -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install configure
