# $Id$
#
# This source file is a part of the Berlin Project.
# Copyright (C) 2000 Stefan Seefeld <stefan@berlin-consortium.org> 
# http://www.berlin-consortium.org
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
# MA 02139, USA.

SHELL		:= /bin/sh
VERSION		:= @VERSION@

has_ggi		:= @HAS_GGI@

top_srcdir	:= @topdir@
srcdir		:= $(top_srcdir)/clients/C++
builddir	:= ../..
cdir		:= $(builddir)/config
hdir		:= $(top_srcdir)/include

define makedep
@echo generating dependencies for $(<F)
$(SHELL) -ec '$(CXX) $(DEPFLAGS) $(CPPFLAGS) $< | sed "s/$*\\.o[ :]*/$*\\.d $*\\.o : /g" > $@'
endef

define compile
@echo compiling $(@F)
$(CXX) $(CPPFLAGS) $(CXXFLAGS) $(OPTFLAGS) $(SOFLAGS) -c $< -o $@
endef

include $(cdir)/local.mk

CPPFLAGS	+= @CPPFLAGS@
LIBS		+= -lBerlin -lWarsaw -lBabylon -lPrague @LIBS@

DEMO_SRC	:= Application.cc LayoutDemo.cc TextDemo.cc \
		   EditTextDemo.cc RasterDemo.cc TransformDemo.cc \
		   ColorDemo.cc LogoDemo.cc FocusDemo.cc \
		   ViewportDemo.cc DocDemo.cc TermDemo.cc demo.cc
DEMO_OBJ	:= $(patsubst %.cc, %.o, $(DEMO_SRC))
DEMO3D_SRC	:= Application.cc PrimitiveDemo.cc CubeDemo.cc demo3D.cc
DEMO3D_OBJ	:= $(patsubst %.cc, %.o, $(DEMO3D_SRC))
PINYIN_SRC	:= pinyin_demo.cc TextConverter.cc
PINYIN_OBJ	:= $(patsubst %.cc, %.o, $(PINYIN_SRC))

TARGETS		:= $(bdir)/demo $(bdir)/demo3D $(bdir)/pinyin_demo

ifeq ($(has_ggi), 1)
TARGETS		+= $(bdir)/canvas $(bdir)/ggiwrapper
endif
all:	$(TARGETS)

$(bdir)/demo:	$(DEMO_OBJ)
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS)

$(bdir)/demo3D:	$(DEMO3D_OBJ)
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS)

ifeq ($(has_ggi), 1)
$(bdir)/canvas:	canvas.o
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS) @GGI_LIBS@

$(bdir)/ggiwrapper:	ggiwrapper.o
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS) @GGI_LIBS@
endif

$(bdir)/primitive:	primitive.o
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS)

$(bdir)/pinyin_demo:	$(PINYIN_OBJ)
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $(PINYIN_OBJ) $(LIBS)

install:
		$(INSTALL) -m755 $(TARGETS) $(bindir)

clean:	
		rm -f $(TARGETS)
		rm -f *.o

distclean:	clean
		rm -f Makefile $(cdir)/Clients-C++/subdirs.mk \
			$(cdir)/Clients-C++/config.log $(cdir)/Clients-C++/config.status

maintainer-clean: distclean
		rm -f $(top_srcdir)/config/Clients-C++/configure $(top_srcdir)/config/Clients-C++/aclocal.m4

%.o:	$(srcdir)/%.cc
	@echo compiling $(@F)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@


ifeq ($(has_ggi), 1)
canvas.o ggiwrapper.o: %.o:	$(srcdir)/%.cc
	@echo compiling $(@F)
	$(CXX) $(CPPFLAGS) @GGI_CPPFLAGS@ $(CXXFLAGS) -c $< -o $@
endif
