/*$Id$
 *
 * This source file is a part of the Berlin Project.
 * Copyright (C) 2000 Stefan Seefeld <stefan@berlin-consortium.org> 
 * http://www.berlin-consortium.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */

#ifndef _UnidrawKit_idl
#define _UnidrawKit_idl

#include <Warsaw/Controller.idl>
#include <Warsaw/Subject.idl>
#include <Warsaw/Command.idl>
#include <Warsaw/Kit.idl>

module Unidraw
{
  interface Component : Warsaw::Subject
    {
      Warsaw::Graphic create_view();
    };
  interface Command : Warsaw::Command
    {
      // memento protocol...
      void store(in Component c, in any a);
      any recall(in Component c);
    };
  interface Manipulator
    {
      boolean grasp(in Warsaw::Input::Event e);
      boolean manipulate(in Warsaw::Input::Event e);
      void effect(in Warsaw::Input::Event e);
    };
  interface Tool
    {
      Manipulator create_manipulator(in Warsaw::Input::Event e);
      Command     interpret_manipulator(in Manipulator m);
    };
  interface Editor : Warsaw::RefCountBase
    {
      attribute Tool current_tool;
      Warsaw::Controller create_viewer(in Warsaw::Coord width, in Warsaw::Coord height);
    };
  interface UnidrawKit : Warsaw::Kit
    {
      Editor create_editor();
    };
};

#endif
