/*$Id$
 *
 * This source file is a part of the Fresco Project.
 * Copyright (C) 1999 Stefan Seefeld <stefan@fresco.org> 
 * http://www.fresco.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */
#ifndef _Fresco_Allocation_idl
#define _Fresco_Allocation_idl

#pragma prefix "fresco.org"

module Fresco
{
  interface Region;
  interface Transform;
  interface Screen;
  
  //. Allocation is used in the process of retrieving
  //. cumulative geometry information for a given Graphic.
  //. This information is used to determine what Regions to
  //. damage in order to redraw the Graphic.
  interface Allocation
    {
      //. Info holds the region and transformation for one
      //. appearance of the graphic.
      struct Info
      {
	Region allocation;
	Transform transformation;
	Screen root;
      };
      //. Add a new entry. This is typically called by the root
      //. node of the scene graph (which is a screen). Since we
      //. want to be able to draw on multiple screens at a time,
      //. the Screen parameter has to be given
      void add(in Region r, in Screen s);
      //. Get the number of entries in the Allocation list.
      long size();
      //. Used to access the l'th entry
      Info get(in long l);
    };
};

#endif
