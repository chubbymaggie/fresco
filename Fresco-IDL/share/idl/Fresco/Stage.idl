/*$Id$
 *
 * This source file is a part of the Berlin Project.
 * Copyright (C) 1999, 2000 Stefan Seefeld <stefan@berlin-consortium.org> 
 * http://www.berlin-consortium.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */
#ifndef _Layout_Stage_idl
#define _Layout_Stage_idl

#include <Warsaw/Graphic.idl>

module Layout
{
  interface StageHandle;
  
  //. A stage allows its children to be placed at any position and
  //. layering.
  interface Stage : Warsaw::Graphic
    {
	//. Position of the graphic in the window-stack. Lower
	//. Index numbers are closer to the top.
      typedef long Index;
	//. Returns the boundingbox of the Stage.
      Warsaw::Region bbox();
	//. The total number of layers.
      long layers();
	//. Returns a handle for the object forming layer l. Returns
	//. nil if the layer is not found..
      StageHandle layer(in Index l);

	//. 'Locks' the stage in that only after the last end() condition
	//. for needRedraw() and needResize() are done.
      void begin();
	//. 'Unlocks' the stage after a begin(). One end() is needed for each
	//. begin().
      void end();
	//. Inserts the given Graphic g into the Stage at the given position
	//. (position) and with the given size (size). It get's it's own layer
	//. (layer). If the layer is allready used all layers >= layer
	//. get increased by one and layer gets inserted into the list.
	//. FIXME: Are there any constraints for the layers? Does layer need
	//. to be <= n+1 where n is the number of StageHandles allready in use?
      StageHandle insert(in Warsaw::Graphic g, in Warsaw::Vertex position, in Warsaw::Vertex size, in Index layer);
    };
  
  interface StageHandle
    {
	//. Returns the Stage this StageHandle belongs to.
      Stage           parent();
	//. Returns the Graphic this StageHandle consists of.
      Warsaw::Graphic child();
        //. Removes this StageHandle and deletes the Graphic it consists of.
      void            remove();
	//. Returns the position of this StageHandle consists of.
      attribute Warsaw::Vertex position;
	//. Returns the size of this StageHandle Consists of.
      attribute Warsaw::Vertex size;
	//. Returns the layer of this StageHandle.
      attribute Stage::Index layer;
    };
};

#endif
