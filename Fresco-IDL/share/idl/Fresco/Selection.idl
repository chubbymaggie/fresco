/*$Id$
 *
 * This source file is a part of the Berlin Project.
 * Copyright (C) 2000 Stefan Seefeld <stefan@berlin-consortium.org> 
 * http://www.berlin-consortium.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */
#ifndef _Warsaw_Selection_idl
#define _Warsaw_Selection_idl

#include <Warsaw/Types.idl>
#include <Warsaw/Subject.idl>

module Warsaw
{
  interface Telltale;

  //. Selection is a Subject which provides a higher level perspective
  //. at groups of Telltales, or more precisely, groups of flags.
  interface Selection : Subject
    {
      //. A policy names a predefined constraint on the telltale group
      //. this selection refers to
      typedef long Policy;

      const Policy exclusive = 0x1; //.< Make sure that a maximum of one Telltale is set at any given time.
      const Policy required = 0x2; //.< Makes sure at least one Telltale is set at any given time.

      //. An Item is used as the payload in the notify call, i.e. it is
      //. what observers get in the delivered any
      struct Item
      {
	  Tag id; //.< The id of the Telltale that got toggled.
	  boolean toggled; //.< The new value if the Telltale.
      };

      //. A list of Tags.
      // FIXME: From the name I suspected that Items was supposed
      //        to be sequence<Item>... Should we change one of those? 
      //        -- tobias
      typedef sequence<Tag> Items;
      
      //. This is the Policy for this Selection.
      attribute Policy type;
      //. Add a given Telltale to the Selection and returns a unique Tag
      //. that can be used to identify it again later.
      Tag add(in Telltale t);
      //. Remove a Telltale identified by the given Tag from this Selection.
      void remove(in Tag t);
      //. Return a sequence that contains the Tags that identify all set
      //. Telltales.
      Items toggled();
    };
};

#endif
