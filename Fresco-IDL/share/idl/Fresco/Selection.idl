/*$Id$
 *
 * This source file is a part of the Berlin Project.
 * Copyright (C) 2000 Stefan Seefeld <stefan@berlin-consortium.org> 
 * http://www.berlin-consortium.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */
#ifndef _Selection_idl
#define _Selection_idl

#include <Warsaw/Types.idl>
#include <Warsaw/Subject.idl>

interface Telltale;

interface Selection : Subject
//. selection is a subject which provides a higher level perspective
//. at groups of telltales, or more precisely, groups of flags.
{
  typedef long Policy;
  const Policy exclusive = 0x1;
  const Policy required = 0x2;
  struct Item
  //. an item is used as the payload in the notify call, i.e. it is
  //. what observers get in the delivered any
  {
    Tag id;
    boolean toggled;
  };
  typedef sequence<Tag> Items;
  //. a list of toggled items

  attribute Policy type;
  Tag add(in Telltale t);
  void remove(in Tag t);
  Items toggled();
};

#endif /* _Selection_idl */
