/*$Id$
 *
 * This source file is a part of the Fresco Project.
 * Copyright (C) 2000 Stefan Seefeld <stefan@fresco.org> 
 * http://www.fresco.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */
#ifndef _Fresco_Canvas_idl
#define _Fresco_Canvas_idl

#include <Fresco/Drawable.idl>
#include <Fresco/Graphic.idl>

#pragma prefix "fresco.org"

module Fresco
{
  // FIXME: How do I use bold in the comments for the reference manual?
  // FIXME: Why do we make it available through CORBA as it is not
  //        location transparent.
  //. The Canvas is an object that allows *location intransparent*
  //. access to a chunk of video memory. It is intended for use in Kits
  //. only. Do not use it in applications.
  interface Canvas : Graphic
    {
      typedef Drawable::PixelFormat PixelFormat;
      typedef Drawable::BufferFormat BufferFormat;

      //. Get the shared memory ID needed to access the Canvas.
      readonly attribute long shm_id;
      //. The color encoding of each pixel used in this Canvas.
      readonly attribute PixelFormat pixel_format;
      //. The encoding of the pixels in the Canvas.
      readonly attribute BufferFormat buffer_format;
      //. Lock the Canvas to make sure you have exclusive access to
      //. this Canvas.
      void lock();
      //. Unlock the Canvas to allow others access again.
      void unlock();
    };
};

#endif
