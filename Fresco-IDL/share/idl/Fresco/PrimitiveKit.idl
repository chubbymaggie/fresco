/*$Id$
 *
 * This source file is a part of the Fresco Project.
 * Copyright (C) 1999, 2000 Stefan Seefeld <stefan@fresco.org> 
 * http://www.fresco.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */

#ifndef _Fresco_PrimitiveKit_idl
#define _Fresco_PrimitiveKit_idl

#include <Fresco/Types.idl>
#include <Fresco/Kit.idl>
#include <Fresco/Primitive.idl>

#pragma prefix "fresco.org"

module Fresco
{
  //. This kit produces graphics with appropriate logic for rendering
  //. abstract 3D shapes. You input meshes, patches, styles (which define
  //. attributes like color, line thickness, pattern, etc) and you get
  //. back an object which will draw the specified type of object when it
  //. is traversed.
  interface PrimitiveKit : Kit
    {
      //. Return a graphic that centers the given Graphic by transformation.
      //. This kind of graphic should be put around a collection
      //. of primitives that are inside a layout object such as a box.
      Graphic root(in Graphic g);
      //. FIXME: What does this do?
      Primitive::Geometry geometry(in Mesh m);
      //. Create a cube of one cubic unit and centered at the origin.
      Graphic cube();
      // Graphic sphere();
      // Graphic tetrahedron();
      //. Apply a fixed transformation to the given Graphic.
      Graphic transformer(in Graphic g);
      //. Create a directional light source.
      //. FIXME: What do the parameters do?
      Graphic directional_light(in Graphic g, in Color c, in float i, in Vertex d);
      //. Create a point light source.
      //. FIXME: What do the parameters do?
      Graphic point_light(in Graphic g, in Color c, in float i, in Vertex l);
      //. Create a spot light source.
      //. FIXME: What do the parameters do?
      Graphic spot_light(in Graphic g, in Color c, in float i, in Vertex l, in Vertex d, in float r, in float a);
    };
};

#endif
