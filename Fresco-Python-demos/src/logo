#!/usr/bin/env python

import sys
import string

# Import the CORBA module
from omniORB import CORBA

# Import the Warsaw stubs
import _GlobalIDL
import POA__GlobalIDL
import CosNaming
# Define an implementation of the ClientContext interface
class ClientContextImpl (POA__GlobalIDL.ClientContext):
    def userName(self):
        return "joe"
    def ping(): return

def main():
    # Initialise the ORB
    orb = CORBA.ORB_init(sys.argv, CORBA.ORB_ID)
    # Find the POA
    poa = orb.resolve_initial_references("RootPOA")
    # Activate the POA
    poaManager = poa._get_the_POAManager()
    poaManager.activate()
    # Create an ClientContext
    ci = ClientContextImpl()
    # Create an object reference, and implicitly activate the object
    client = ci._this()

    # get a server context
    context = orb.resolve_initial_references("NameService")
    name = [CosNaming.NameComponent("IDL:ServerContextManager:1.0", "Object")]
    manager = context.resolve(name)
    server  = manager.newServerContext(client)

    # get some kits
    object  = server.create("IDL:LayoutKit:1.0")
    layout  = object._narrow(_GlobalIDL.LayoutKit)
    object  = server.create("IDL:WidgetKit:1.0")
    widget  = object._narrow(_GlobalIDL.WidgetKit)
    object  = server.create("IDL:DesktopKit:1.0")
    desktop = object._narrow(_GlobalIDL.DesktopKit)
    object  = server.create("IDL:ImageKit:1.0")
    image   = object._narrow(_GlobalIDL.ImageKit)
    object  = server.create("IDL:FigureKit:1.0")
    figure  = object._narrow(_GlobalIDL.FigureKit)

    raster = image.create("../etc/PNG/landscape.png")
    pixmap = figure.pixmap(raster)
    viewport = layout.scrollable(pixmap)
    adjustment = viewport.adjustment(_GlobalIDL.xaxis)
    group  = widget.group(viewport)
    shell  = desktop.shell(group)
    while 1:
	line = sys.stdin.readline()
	if len(line) == 1: break
        offset = string.atof(line)
	adjustment.adjust(`offset*5`)

if __name__ == '__main__':
    main()
