# $Id$
#
# This source file is a part of the Fresco Project.
# Copyright (C) 1999, 2000 Stefan Seefeld <stefan@fresco.org> 
# http://www.fresco.org/
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the
# Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
# MA 02139, USA.

SHELL		:= /bin/sh

top_srcdir	:= @top_srcdir@
srcdir		:= @srcdir@
idldir		:= @Fresco_IDL_prefix@/share/idl
abs_builddir	:= @abs_builddir@
cdir		:= @top_builddir@/config
h1dir		:= $(top_srcdir)/include/Fresco
h2dir		:= @top_builddir@/include

include $(cdir)/local.mk

# nice trick to include all the OS dependent flags nonintrusively
# into the omni generated sources...
CPPFLAGS	+= -include $(h2dir)/Fresco/acconfig.hh
CXXFLAGS	+= $(SO_CXXFLAGS)
LDFLAGS		+= $(SO_LDFLAGS)

# Extra compilation and linking flags.
IDLCXXFLAGS	:= -bcxx -nf -Wbkeep_inc_path -C$(abs_builddir) -I.
ifeq ($(SHORTCUT), yes)
IDLCXXFLAGS	+= -Wbshortcut
endif
IDLDYNFLAGS	:= -Wba
IDLTIEFLAGS	:= -Wbtp

DYNINT		:= Types.idl TextBuffer.idl BoundedValue.idl BoundedRange.idl \
		   Selection.idl Path.idl
STATINT		:= RefCountBase.idl Identifiable.idl ClientContext.idl Server.idl \
		   Kit.idl Transform.idl Region.idl Allocation.idl Traversal.idl \
		   PickTraversal.idl DrawTraversal.idl Graphic.idl Screen.idl \
		   Input.idl Focus.idl Subject.idl Observer.idl Controller.idl MainController.idl View.idl \
		   Drawable.idl DrawingKit.idl Grid.idl Viewport.idl Stage.idl LayoutKit.idl \
		   Telltale.idl StreamBuffer.idl Trigger.idl Canvas.idl State.idl ToolKit.idl \
		   Widget.idl WidgetKit.idl GadgetKit.idl Raster.idl RasterKit.idl Figure.idl \
		   Image.idl FigureKit.idl Command.idl CommandKit.idl \
		   TextKit.idl Desktop.idl Window.idl DesktopKit.idl \
		   DrawingKit3D.idl Primitive.idl PrimitiveKit.idl UnidrawKit.idl \
		   Font.idl FontKit.idl

INT		:= $(DYNINT) $(STATINT)

DYNSRC		:= $(patsubst %.idl, %DynSK.cc, $(DYNINT))
DYNSTATSRC	:= $(patsubst %.idl, %SK.cc, $(DYNINT)) 
STATSRC		:= $(patsubst %.idl, %SK.cc, $(STATINT))
UTILSRC		:= IO.cc Unicode.cc ClientContextImpl.cc Resolve.cc
SRC		:= $(DYNSTATSRC) $(DYNSRC) $(STATSRC)

DYNHDR		:= $(patsubst %.idl, %.hh, $(DYNINT))
STATHDR		:= $(patsubst %.idl, %.hh, $(STATINT))
UTILHDR		:= ImplVar.hh resolve.hh exception.hh IO.hh Unicode.hh ClientContextImpl.hh
GENHDR		:= $(DYNHDR) $(STATHDR)
HDR		:= $(GENHDR) $(UTILHDR)

DEP		:= $(patsubst %, %.d, $(notdir $(INT) $(SRC)))

SYN		:= $(patsubst %.idl, %.syn, $(INT))
OBJ		:= $(patsubst %.cc, %.o, $(SRC) $(UTILSRC))

TARGET		:= ../lib/libFresco.so

vpath %.idl $(idldir)/Fresco
vpath %.hh $(h1dir):$(h2dir)/Fresco
vpath %.cc $(srcdir)

.FORCE:

.NOTPARALLEL:

all: $(TARGET)

$(TARGET): $(OBJ)
	@echo linking $(@F)
	$(CXX) $(LDFLAGS) -o $@ $(OBJ) $(LIBS)

depend: $(DEP)

xref: $(HDR)

doc: $(HDR)

install:	all
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(libdir)
	$(SHTOOL) install -C -m 755 $(TARGET) $(DESTDIR)$(libdir)/$(notdir $(TARGET))
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(includedir)/Fresco
	for header in acconfig.hh $(GENHDR) ; do \
	  $(SHTOOL) install -C -m 644 $(h2dir)/Fresco/$$header $(DESTDIR)$(includedir)/Fresco/$$header; \
	done
	for header in config.hh $(UTILHDR); do \
	  $(SHTOOL) install -C -m 644 $(h1dir)/$$header $(DESTDIR)$(includedir)/Fresco/$$header; \
	done
	$(SHTOOL) mkdir -f -p -m 755 $(DESTDIR)$(bindir)
	$(SHTOOL) install -C -m 755 ../config/Fresco-C++-config $(DESTDIR)$(bindir)/Fresco-C++-config

install-doc: doc

uninstall:
	rm -f $(DESTDIR)$(bindir)/Fresco-C++-config
	rm -rf $(DESTDIR)$(includedir)/Fresco
	rm -f $(DESTDIR)$(libdir)/libFresco.so

clean:	
	rm -f $(TARGET)
	rm -f *.o *.d
	rm -f $(SRC) $(patsubst %, $(h2dir)/Fresco/%, $(GENHDR))

distclean:	clean
	rm -f Makefile ../include/Fresco/acconfig.hh \
          ../bin/Fresco-C++-config

maintainer-clean: distclean

%.idl.d:	%.idl
	@echo generating dependencies for $(<F)
	$(SHELL) -ec '$(CXX) -x c++ $(DEPFLAGS) $(CPPFLAGS) -I$(idldir) $< \
	| sed "s/$*\\.idl\\.o[ :]*/$*\\.idl.d $*\\.hh $*SK\\.cc : /g" > $@'
$(STATSRC): %SK.cc:	%.idl
	@echo generating $(@F)
	(cd $(idldir) && $(IDLCXX) $(IDLCXXFLAGS) Fresco/$(<F))
	mv $*.hh $(h2dir)/Fresco
$(DYNSTATSRC): %SK.cc:	%.idl
	@echo generating $(@F)
	(cd $(idldir) && $(IDLCXX) $(IDLCXXFLAGS) $(IDLDYNFLAGS) Fresco/$(<F))
	mv $*.hh $(h2dir)/Fresco
$(DYNSRC): %DynSK.cc:	%.idl
	@echo generating $(@F)
	(cd $(idldir) && $(IDLCXX) $(IDLCXXFLAGS) $(IDLDYNFLAGS) Fresco/$(<F))
	mv $*.hh $(h2dir)/Fresco
$(STATHDR): %.hh:	%.idl
	@echo generating $(@F)
	(cd $(idldir) && $(IDLCXX) $(IDLCXXFLAGS) Fresco/$(<F))
	mv $*.hh $(h2dir)/Fresco
$(DYNHDR): %.hh:	%.idl
	@echo generating $(@F)
	(cd $(idldir) && $(IDLCXX) $(IDLCXXFLAGS) $(IDLDYNFLAGS) Fresco/$(<F))
	mv $*.hh $(h2dir)/Fresco

%.cc.d:	%.cc $(GENHDR)
	@echo generating dependencies for $(<F)
	$(SHELL) -ec '$(CXX) $(DEPFLAGS) $(CPPFLAGS) -I$(h2dir) -I$(h2dir)/Fresco $< \
	| sed "s/$*\\.o[ :]*/$*\\.cc.d $*\\.o : /g" > $@'

%.o:	%.cc
	@echo compiling $(@F)
	$(CXX) $(CPPFLAGS) -I$(h2dir) -I$(h2dir)/Fresco $(CXXFLAGS) $(SO_CXXFLAGS) -c $< -o $@

ifneq (,$(findstring depend, $(MAKECMDGOALS)))
$(DEP): %.d:	.FORCE
endif

ifeq (,$(filter $(MAKECMDGOALS), depend doc install-doc clean distclean maintainer-clean))
-include $(DEP)
endif
