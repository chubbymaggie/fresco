/*$Id$
 *
 * This source file is a part of the Berlin Project.
 * Copyright (C) 1999 Graydon Hoare <graydon@pobox.com> 
 * Copyright (C) 1999 Stefan Seefeld <seefelds@magellan.umontreal.ca> 
 * http://www.berlin-consortium.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */
#ifndef _WidgetKit_idl
#define _WidgetKit_idl

#include "Cloneable.idl"
#include "Types.idl"

/** this kit is a layer on top of the Graphic interface and
    CommandKit. It is responsible for creating subjects, and binding
    views and controller strategies to the subjects. These amalgams
    are usually called "widgets" -- they react to events in a
    particular way by modifying the subjects they're bound to. */

interface Telltale;
interface TelltaleConstraint;
interface BoundedValue;
interface BoundedRange;
interface TextBuffer;
interface StreamBuffer;
interface Graphic;
interface View;
interface Controller;

interface WidgetKit : Cloneable
{
  TelltaleConstraint exclusive();
  TelltaleConstraint selectionRequired();
  Telltale normalTelltale();
  Telltale constrainedTelltale(in TelltaleConstraint c);
  BoundedValue bvalue(in Coord l, in Coord u, in Coord v, in Coord s, in Coord p);
  BoundedRange brange(in Coord l, in Coord u, in Coord lv, in Coord uv, in Coord s, in Coord p);
  TextBuffer text();
  StreamBuffer stream();
  
  Graphic inset(in Graphic g, in Color c);
  Graphic outset(in Graphic g, in Color c);
  Graphic filler(in Graphic g, in Color c);
  View    pushButtonFrame(in Graphic g, in Color c, in Telltale t);

  Controller button(in Graphic g, in Color c); // don't worry, just a test...

//   Graphic button(in Reactor strategy, in Telltale subj);
//   Graphic slider(in Reactor strategy, in BoundedValue subj);
//   Graphic viewport(in Reactor strategy, in BoundedValue x, in BoundedValue y, in Graphic child);
  
    // more widgets in here
  Graphic debugger(in Graphic g, in string s);
};

#endif

