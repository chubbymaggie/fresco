/*$Id$
 *
 * This source file is a part of the Berlin Project.
 * Copyright (C) 1999 Graydon Hoare <graydon@pobox.com> 
 * Copyright (C) 1999, 2000 Stefan Seefeld <stefan@berlin-consortium.org> 
 * http://www.berlin-consortium.org
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public
 * License along with this library; if not, write to the
 * Free Software Foundation, Inc., 675 Mass Ave, Cambridge,
 * MA 02139, USA.
 */
#ifndef _ToolKit_idl
#define _ToolKit_idl

#include "Types.idl"
#include "Telltale.idl"
#include "Kit.idl"

interface Graphic;
interface View;
interface Controller;
interface Trigger;
interface Command;
interface TextBuffer;

interface ToolKit : Kit
//. this kit provides common objects for very basic interaction tasks
//. and Telltale Views such as bevels and indicators
{
  enum FrameType { none, inset, outset, convex, concav, colored};
  enum Direction { left, right, up, down};
  union FrameSpec switch (FrameType)
    {
    case inset:
      Coord abrightness;
    case outset:
      Coord bbrightness;
    case convex:
      Coord cbrightness;
    case concav:
      Coord dbrightness;
    case colored:
      Color foreground;
    };
  
  Graphic      debugger(in Graphic g, in string s);
  Graphic      rgb(in Graphic gg, in Coord r, in Coord g, in Coord b);
  Graphic      alpha(in Graphic g, in Coord a);

  Graphic      frame(in Graphic g, in Coord thickness, in FrameSpec spec, in boolean fill);
  Graphic      dynamic(in Graphic g, in Coord thickness,
		       in Telltale::Flag mask, in FrameSpec s1, in FrameSpec s2,
		       in boolean fill, in Telltale t);
  Graphic      framedTriangle(in Graphic g, in Coord thickness, in FrameSpec spec, in boolean fill, in Direction d);
  Graphic      dynamicTriangle(in Graphic g, in Coord thickness,
			       in Telltale::Flag mask, in FrameSpec s1, in FrameSpec s2,
			       in boolean fill, in Direction d, in Telltale t);

  Graphic      framedDiamond(in Graphic g, in Coord thickness, in FrameSpec spec, in boolean fill);
  Graphic      dynamicDiamond(in Graphic g, in Coord thickness,
			      in Telltale::Flag mask, in FrameSpec s1, in FrameSpec s2,
			      in boolean fill, in Telltale t);

//   Graphic      filler(in Graphic g, in Color c);
//   Graphic      indicator(in Graphic g, in Color c, in Telltale t);
  Trigger      button(in Graphic g, in Command c);
  Controller   toggle(in Graphic g);
  Controller   dragger(in Graphic g, in Command c);
  Controller   stepper(in Graphic g, in Command c);
  Controller   textInput(in Graphic g, in TextBuffer b);
  Controller   group(in Graphic g);
};

#endif

